// there's a lot of this, so we're going to save on parsing time
DEFINE_PATCH_MACRO andyr_spell_to_innate BEGIN

  LOCAL_SET bam = 0
  LOCAL_SET ho  = 0
  LOCAL_SET hc  = 0
  WRITE_SHORT  0x1c 4                        // sets spell type to innate (4)
  WRITE_LONG   0x34 1                        // sets spell level to 1 to avoid scripting issues
  WRITE_LONG   0x50 ` 0
  WRITE_LONG   0x54 ` 0
  READ_LONG    0x64 ho
  READ_ASCII   ho + 0x04 bam                 // reads the bam filename from ability
  WRITE_ASCIIE 0x3a ~%bam%~ #8               // writes the bam filename from abilities to spell icon
  FOR (READ_SHORT 0x68 hc; hc; hc -= 0x01) BEGIN // loops once for every ability
    WRITE_SHORT ho + 0x28 * hc - 0x26 0x04   // changes ability icon location to innate (4)
  END

END

// fully extensible
DEFINE_ACTION_MACRO andyr_cinders_of_ashes_of_embers BEGIN

  ACTION_IF FILE_EXISTS_IN_GAME j#aoev22.txt BEGIN

    COPY_EXISTING weapprof.2da override
      COUNT_2DA_COLS cols
      READ_2DA_ENTRIES_NOW rows cols - 1
      SPRINT int_name null
      FOR (i_0 = 20; i_0 < cols - 1 && ~%int_name%~ STRING_COMPARE_CASE ~%match%~; i_0 += 1) BEGIN
        READ_2DA_ENTRY_FORMER rows 0 i_0 int_name
        PATCH_IF ~%int_name%~ STRING_EQUAL_CASE ~%match%~ BEGIN
          FOR (i_1 = 9; i_1 < 29; i_1 += 1) BEGIN
            READ_2DA_ENTRY_FORMER rows i_1 i_0 + 1 entry
            PATCH_IF entry = 0 BEGIN
              SET_2DA_ENTRY_LATER set i_1 i_0 + 1 1
            END
          END
          PATCH_IF ~%match%~ STRING_EQUAL_CASE ~A!SHARPSHOOTER~ BEGIN // sharpshooters can put 5 stars in ranged weapons
            SET_2DA_ENTRY_LATER set 25 i_0 + 1 5 // and they now have access to longbows
          END
          SET_2DA_ENTRIES_NOW set cols - 1
          PRETTY_PRINT_2DA
        END
      END
    BUT_ONLY

  END
  
END

  /*
 * fl#add_kit_ee - An ADD_KIT supplement for EE-type games
 * Author: Fredrik Lindgren, a.k.a., Wisp
 * Licence: public domain
 * Date: 2014-09-07
 */

OUTER_SPRINT fl#add_kit_ee#version "1.0.4"

DEFINE_ACTION_FUNCTION fl#add_kit_ee#get_row
  STR_VAR
    file = ""
    row_rame = ""
    column = 0
  RET
    row
BEGIN
  COPY_EXISTING "%file%.2da" override
    COUNT_2DA_COLS num_col
    READ_2DA_ENTRIES_NOW file num_col
    SPRINT row ""
    FOR (i = 0; i < file; ++i) BEGIN
      READ_2DA_ENTRY_FORMER file i column label
      PATCH_IF "%label%" STRING_EQUAL_CASE "%row_name%" BEGIN
        FOR (j = 1; j < num_col; ++j) BEGIN
          READ_2DA_ENTRY_FORMER file i j item
          SPRINT row "%row% %item%"
        END
      END
    END
  BUT_ONLY
END

DEFINE_ACTION_FUNCTION fl#add_kit_ee#get_column
  STR_VAR
    file = ""
    column_name = ""
  RET
    column
BEGIN
  COPY_EXISTING "%file%.2da" override
    COUNT_2DA_COLS num_col
    READ_2DA_ENTRIES_NOW file num_col - 1
    SPRINT column ""
    FOR (i = 0; i < num_col - 1; ++i) BEGIN
      READ_2DA_ENTRY_FORMER file 0 i label
      PATCH_IF "%label%" STRING_EQUAL_CASE "%column_name%" BEGIN
        FOR (j = 1; j < file; ++j) BEGIN
          READ_2DA_ENTRY_FORMER file j i + 1 item
          SPRINT column "%column% %item%"
        END
      END
    END
  BUT_ONLY
END

DEFINE_ACTION_FUNCTION fl#add_kit_ee#add_row
  STR_VAR
    kit_name = ""
    input = ""
    file = ""
    clone = ""
BEGIN
  ACTION_IF "%input%" STR_CMP "" BEGIN
    OUTER_SPRINT append "%kit_name% %input%"
    APPEND "%file%.2da" "%append%" UNLESS "%kit_name%"
  END ELSE ACTION_IF "%clone%" STR_CMP "" BEGIN
    LAF fl#add_kit_ee#get_row
      STR_VAR
        file
        row_name = EVAL "%clone%"
      RET
        row
    END
    OUTER_SPRINT append "%kit_name% %row%"
    APPEND "%file%.2da" "%append%" UNLESS "%kit_name%"
  END
END

DEFINE_ACTION_FUNCTION fl#add_kit_ee#add_column
  STR_VAR
    kit_name = ""
    input = ""
    file = ""
    clone = ""
BEGIN
  ACTION_IF "%input%" STR_CMP "" BEGIN
    OUTER_SPRINT append "$ $ %kit_name% %input%"
    APPEND_COL "%file%.2da" "%append%" UNLESS "%kit_name%"
  END ELSE ACTION_IF "%clone%" STR_CMP "" BEGIN
    LAF fl#add_kit_ee#get_column
      STR_VAR
        file
        column_name = EVAL "%clone%"
      RET
        column
    END
    OUTER_SPRINT append "$ $ %kit_name% %column%"
    APPEND_COL "%file%.2da" "%append%" UNLESS "%kit_name%"
  END
END

DEFINE_ACTION_FUNCTION fl#add_kit_ee#validate
  INT_VAR
    kit_number = 0
    kit_class = 0
  STR_VAR
    kit_name = ""
    backstab = ""
    clswpbon = ""
    hpclass = ""
    numwslot = ""
    thiefskl = ""
    traplimt = ""
    clascolr = ""
    clasiskl = ""
    clasthac = ""
    thiefscl = ""
  RET
    backstab
    thiefskl
    traplimt
BEGIN
  ACTION_IF kit_class != 4 AND ("%backstab%" STR_CMP "" OR
                                "%thiefskl%" STR_CMP "" OR
                                "%traplimt%" STR_CMP "")
  BEGIN
    WARN ~WARNING: the arguments backstab, thiefskl and traplimt should only be provided for thief kits~
    OUTER_SPRINT backstab ""
    OUTER_SPRINT thiefskl ""
    OUTER_SPRINT traplimt ""
  END
END

DEFINE_PATCH_FUNCTION fl#add_kit_ee#get_2da_value
  STR_VAR
    row = ""
    column = ""
    req_column_count = 2
    value = "0"
  RET
    value
BEGIN
  COUNT_2DA_COLS num_col
  READ_2DA_ENTRIES_NOW file req_column_count
  FOR (i = 0; i < file; ++i) BEGIN
    READ_2DA_ENTRY_FORMER file i 0 row_label
    PATCH_IF "%row_label%" STRING_EQUAL_CASE "%row%" BEGIN
      // We assume the top row is off by one
      FOR (j = 0; j < num_col - 1; ++j) BEGIN
        READ_2DA_ENTRY_FORMER file 0 j col_label
        PATCH_IF "%col_label%" STRING_EQUAL_CASE "%column%" BEGIN
          READ_2DA_ENTRY_FORMER file i j + 1 value
          i = file
          j = num_col
        END
      END
    END
  END
END

DEFINE_ACTION_FUNCTION fl#add_kit_ee
  INT_VAR
    biography = "-2"
    fallen = 0
    briefdesc = "-2"
    fallen_notice = "-2"
  STR_VAR
    kit_name = ""
    backstab = ""
    clsrcreq = ""
    clswpbon = ""
    hpclass = ""
    numwslot = ""
    thiefskl = ""
    traplimt = ""
    clascolr = ""
    clasiskl = ""
    clasthac = ""
    thiefscl = ""
BEGIN
  ACTION_IF GAME_IS ~bgee bg2ee~ BEGIN
    PRINT "Doing EE-type kit extensions for kit %kit_name%"

    OUTER_SET kit_number = "-1"

    COPY_EXISTING kitlist.2da override
      READ_2DA_ENTRIES_NOW kitlist 9
      FOR (i = 0; i < kitlist; ++i) BEGIN
        READ_2DA_ENTRY_FORMER kitlist i 1 k
        PATCH_IF "%k%" STRING_EQUAL_CASE "%kit_name%" BEGIN
          READ_2DA_ENTRY_FORMER kitlist i 0 kit_number
          READ_2DA_ENTRY_FORMER kitlist i 2 kit_lower
          READ_2DA_ENTRY_FORMER kitlist i 3 kit_mixed
          READ_2DA_ENTRY_FORMER kitlist i 4 kit_desc
          READ_2DA_ENTRY_FORMER kitlist i 8 kit_class
        END
      END
    BUT_ONLY

    ACTION_IF kit_number < 0 BEGIN
      FAIL ~ERROR: the kit %kit_name% was not found in kitlist.2da~
    END

    LAF fl#add_kit_ee#validate
      INT_VAR
        kit_number
        kit_class
      STR_VAR
        kit_name
        backstab
        clsrcreq
        clswpbon
        hpclass
        numwslot
        thiefskl
        traplimt
        clascolr
        clasiskl
        clasthac
        thiefscl
      RET
        backstab
        thiefskl
        traplimt
    END

    COPY_EXISTING kitlist.2da override
      INNER_ACTION BEGIN
        COPY_EXISTING kit.ids override
          READ_2DA_ENTRIES_NOW file 2
          FOR (i = file - 1; i >= 0; --i) BEGIN
            READ_2DA_ENTRY_FORMER file i 1 k
            PATCH_IF "%k%" STRING_EQUAL_CASE "%kit_name%" BEGIN
              READ_2DA_ENTRY_FORMER file i 0 number
            END
          END
        BUT_ONLY
      END
      INNER_PATCH_SAVE kitids "%number%" BEGIN
        REPLACE_TEXTUALLY "0x\([0-9]+\)" "0x0000\1"
      END
      SPRINT w "[ %TAB%]+"
      SPRINT ow "[ %TAB%]*"
      SPRINT d "[0-9]+"
      SPRINT h "[0-9x]+"
      REPLACE_TEXTUALLY ~\(%d%%w%%kit_name%%w%%d%%w%%d%%w%%d%%w%.+%w%%d%%w%%h%%w%%d%%ow%$\)~ ~\1 %kitids%~
    BUT_ONLY

    OUTER_PATCH 0 BEGIN
      LOOKUP_IDS_SYMBOL_OF_INT class class kit_class
    END

    ACTION_IF biography < "-1" OR briefdesc < "-1" OR fallen_notice < "-1" BEGIN
      COPY_EXISTING clastext.2da override
        PATCH_FOR_EACH column IN biography briefdesc fallen_notice BEGIN
          PATCH_IF EVAL "%column%" < "-1" BEGIN
            LPF fl#add_kit_ee#get_2da_value
              STR_VAR
                row = EVAL "%class%"
                column
                req_column_count = 8
              RET
                value
            END
            PATCH_IF (IS_AN_INT "%value%") BEGIN
              SET EVAL "%column%" = value
            END ELSE BEGIN
              SET EVAL "%column%" = 0
            END
          END
        END
      BUT_ONLY
    END

    OUTER_SPRINT clastext "%kit_name% %kit_class% %kit_number% %kit_lower% %kit_desc% %kit_mixed% %biography% %fallen% %briefdesc%"

    ACTION_IF FILE_CONTAINS_EVALUATED (clastext.2da "FALLEN_NOTICE") BEGIN
      OUTER_SPRINT clastext "%clastext% %fallen_notice%"
    END

    APPEND clastext.2da "%clastext%" UNLESS "%kit_name%"

    ACTION_FOR_EACH item IN
                    backstab
                    clsrcreq
                    clswpbon
                    hpclass
                    numwslot
                    thiefskl
                    traplimt
    BEGIN
      ACTION_IF FILE_CONTAINS_EVALUATED ("%item%.2da" "^[ %TAB%]*%class%[ %TAB%]+") BEGIN
        OUTER_SPRINT clone "%class%"
      END ELSE BEGIN
        OUTER_SPRINT clone ""
      END
      LAF fl#add_kit_ee#add_row
        STR_VAR
          kit_name
          input = EVAL EVAL "%%item%%"
          file = EVAL "%item%"
          clone
      END
    END

    ACTION_FOR_EACH item IN
                    clascolr
                    clasiskl
                    clasthac
                    thiefscl
    BEGIN
      LAF fl#add_kit_ee#add_column
        STR_VAR
          kit_name
          input = EVAL EVAL "%%item%%"
          file = EVAL "%item%"
          clone = EVAL "%class%"
      END
    END

    ACTION_FOR_EACH file IN
                    backstab
                    clascolr
                    clasiskl
                    clastext
                    clasthac
                    clsrcreq
                    clswpbon
                    hpclass
                    numwslot
                    thiefscl
                    thiefskl
                    traplimt
                    kitlist
    BEGIN
      COPY_EXISTING "%file%.2da" override
        PRETTY_PRINT_2DA
      BUT_ONLY
    END
  END
END
